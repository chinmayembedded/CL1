object a_1
{
	def bsearch(beg:Int, end:Int, myArray:Array[Int], search:Int):Int=
	{
		var mid:Int=0
		mid = (beg+end)/2
		println(mid)
		if(beg>end)
			return -1;
		else if(search == myArray(mid))
			return mid;
		else if(search < mid)
			bsearch(beg, mid-1, myArray,search);
		else
			bsearch(mid+1, end, myArray, search)
	}
	def main(args:Array[String])
	{
		println("Enter no of elements")
		var n = Console.readInt()
		println(n)

		val myArray:Array[Int] = new Array[Int](n);
		println("Enter the elements")
		var i=0;		
		for(i<-0 to n-1)
		{
			myArray(i) = Console.readInt()
		}
		println("Given array is")
		for(i<-0 to n-1)
		{
			println(myArray(i))
		}

		println("Sorted array is")
		var j=0
		val lim = myArray.size -1		
		for(i<-1 to lim)
		{
			for(j<-lim to i by -1)
			{
				if(myArray(j-1) > myArray(j))
				{
					val temp = myArray(j-1)
					myArray(j-1) = myArray(j)
					myArray(j) = temp
				}
			}
		}
		println("Sorted")
		for(i<-0 to n-1)
		{
			println(myArray(i))
		}
		println("Enter element to search")
		val search = Console.readInt()
		var beg = 0
		var end = lim 
		var ret = bsearch(beg, end, myArray, search )			
		if(ret < 0)
			println("Element not found")
		else
			println(s" Element found at $ret")
	}
}
