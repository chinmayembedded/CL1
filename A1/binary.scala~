object a_1
{
	def binary_search(beg:Int, end:Int, myarray:Array[Int], search:Int):Int=
	{
		var mid:Int = 0
		mid = (beg + end)/2
		println("In b_search")		
		if(beg>end){
			return -1
		}
		else if(search == myarray(mid))
		{	return mid
		}
		else if(search > mid)
		{
			binary_search(mid+1,end,myarray,search)
		}	
		else
		{
			binary_search(beg, mid-1,myarray,search)
		}
	}
	def main(args:Array[String])
	{
		val n = readLine("Enter number of elements")
		val num = n.toInt;
		var i=0;
		var myarray:Array[Int] = new Array[Int](num);
		for(i<-0 to num-1)
		{
			myarray(i) = Console.readInt();
		}
		println("Array is")
		for(i<-0 to num-1)
		{	
			println(myarray(i));
		}
		println("Sorted array is")
		var j=0;
		val len = myarray.size-1;		
		/*for(i<-1 to len)
		{
			for(j<-len to i by -1)
			{
				if(myarray(j)<myarray(j-1))
				{
					val temp = myarray(j)
					myarray(j) = myarray(j-1)
					myarray(j-1) = temp
				}
			}
		}*/
		scala.util.Sorting.quickSort(myarray)
		for(i<-0 to num-1)
		{
			println(myarray(i))
		}
		println("Enter the element to search")
		val search = Console.readInt();
		var beg = 0
		var end = len -1
		var ret =0
		ret = binary_search(beg, end, myarray, search)
		if(ret<0)
			println("Element not found")
		else
			println(s"Element found at $ret")
	}	
}
